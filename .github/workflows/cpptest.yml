name: CpptestCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,develop ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-cpptest:
    name: Analyze project with C/C++test
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Generate BDF
      env:
        CPPTEST_SCAN_PROJECT_NAME: MISRA
      run: |
        & "C:\Program Files\Parasoft\C++test\2021.2\cpptest\bin\cpptesttrace.exe" make all
      working-directory: ./

    - name: Remove Workspace
      run: |
         Remove-Item -Recurse ../workspace
      working-directory: ./

    - name: Run C++test
      # Use the 'run-cpptest-action' GitHub Action.
      uses: parasoft/run-cpptest-action@1.0.1
      with:
        installDir: 'C:\Program Files\Parasoft\C++test\2021.2\cpptest'
        compilerConfig: 'gcc_4_9'
        testConfig: 'builtin://MISRA C 2012'
        reportFormat: xml,html,sarif
        input: './cpptest_GitHub_Actions_MISRA/cpptestscan.bdf'
        additionalParams: '-localsettings ./settings.properties -localsettings ../cpptestcli.properties -publish'
        commandLinePattern: '${cpptestcli} -data ../workspace -config "${testConfig}" -report "${reportDir}" -bdf "${input}" ${additionalParams}'

    # Uploads analysis results in the SARIF format, so that they are displayed as GitHub code scanning alerts.
    - name: Upload results (SARIF)
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: reports/report.sarif
    
    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Static analysis reports
        path: reports/*.*
